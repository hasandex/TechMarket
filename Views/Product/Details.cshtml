@model Product
<div class="container">
@{
    ViewData["Title"] = Model.Name;
}
    <input type="hidden" value="@Model.Id" id="productId" />
    <input type="hidden" value="@ViewBag.userRate" id="userRate" />
    <div class="container my-5">
        <div class="row">
            <div class="col-lg-6 col-md-12">
                <img src="@($"{Settings.ItemImageStorePath}/{Model.Cover}")" style="width:100%;height:auto;" class="img-fluid rounded" alt="Product Image">
            </div>
            <div class="col-lg-6 col-md-12  text-md-start">
                <h5 class="my-3">@Model.Name</h5>
                <p class="my-3">@Model.Description</p>
                <p class="my-3"><strong>Price:</strong>  @Model.Price$</p>
                <p class="my-3"><strong>Category:</strong>  @Model.Category.Name</p>
                <div class="d-flex align-items-center my-3">
                    <p class="mb-0 me-2"><strong>Rate:</strong> </p>
                    @if (ViewBag.productRate == -1)
                    {
                        <p class="small text-muted mb-0">Not Rated yet</p>
                    }
                    else
                    {
                        <ul class="list-inline small mb-0">
                            @{
                                int wholeStar = (int)ViewBag.productRate;
                                bool hasHalfStar = ViewBag.productRate % 1 > 0;
                            }

                            @for (int i = 0; i < wholeStar; i++)
                            {
                                <li class="list-inline-item m-0"><i class="fa fa-star text-warning"></i></li>
                            }

                            @if (hasHalfStar)
                            {
                                <li class="list-inline-item m-0"><i class="fa fa-star-half text-warning"></i></li>
                            }
                        </ul>
                    }
                </div>
                <p class="my-3"><strong>Quantity Available :</strong> @Model.Quantity </p>
                <button class="btn btn-primary btn-add-to-cart" data-product-id="@Model.Id">
                    <i class="bi bi-cart-plus"></i>
                </button>
                @if (User.Identity.IsAuthenticated)
                {
                    <form asp-asp-controller="Product" asp-action="RateProduct" id="rating-form" class="my-3">
                        <input name="productId" value="@Model.Id" hidden />
                        <div class="star-rating mb-2">
                            <select class="bg-dark w-100" style="color: #FFD700" name="rating">
                                <option value="1">&#9733;</option>
                                <option value="2">&#9733;&#9733;</option>
                                <option value="3">&#9733;&#9733;&#9733;</option>
                                <option value="4">&#9733;&#9733;&#9733;&#9733;</option>
                                <option value="5">&#9733;&#9733;&#9733;&#9733;&#9733;</option>
                            </select>
                            
                        </div>
                        <div>
                            <button type="submit" class="btn bg-dark" id="submit-rating" style="color: #FFD700">Send Rating</button>
                        </div>
                        @if (ViewBag.userRate != -1)
                        {
                            <h5 class="mt-3 text" style="color:black">You have rated this product with @ViewBag.userRate stars</h5>
                        }
                    </form>
                }
                @if (User.Identity.IsAuthenticated && await UserManager.IsInRoleAsync(await UserManager.GetUserAsync(User), ClsRoles.roleAdmin))
                {
                    if (Model.Status == "To Be Determined")
                    {
                        <div>
                            <a class="btn btn-outline-success" asp-controller="Admin" asp-action="MakeProductAvailable" asp-route-id="@Model.Id">Approve</a>
                            <a class="btn btn-outline-danger" asp-controller="Admin" asp-action="RejectProduct" asp-route-id="@Model.Id">Reject</a>
                        </div>
                    }
                    else if (Model.Status == "Accepted")
                    {
                        <p class="text-success"><strong>@Model.Status</strong></p>
                    }
                    else if (Model.Status == "Rejected")
                    {
                        <p class="text-danger"><strong>@Model.Status</strong></p>
                    }
  
                 }
            </div>
          
        </div>
 
       
 
</div>

@section Scripts{
        <script src="~/js/addtocart.js"></script>
   @*  <script>
        // Get all the radio buttons and labels
        const ratingRadios = $('.star-rating input[type="radio"]');
        const ratingLabels = $('.star-rating label');
        const ratingForm = $('#rating-form');
        const submitButton = $('#submit-rating');
        const productId = $('#productId').val();
        // Add event listener to the radio buttons
        ratingRadios.on('change', function () {
            submitButton.prop('disabled', false);
            // Remove the 'selected' class from all labels
            ratingLabels.removeClass('selected');

            // Add the 'selected' class to the current and all previous labels
            $(this).prevAll('label').add(this).addClass('selected');
        });

        // Add click event listener to the submit button
        submitButton.on('click', function () {
            submitRatingViaAjax();
        });

        function submitRatingViaAjax() {
            const ratingValue = $('.star-rating input[name="rating"]:checked').val();
            $.ajax({
                url: `/Product/RateProduct?ratingValue=${ratingValue}&productId=${productId}`,
                method: 'POST',
                success: function (response) {
                    // Handle the successful response
                    console.log('Rating submitted successfully');
                    console.log(ratingValue);

                },
                error: function (xhr, status, error) {
                    // Handle any errors
                    console.error('Error submitting rating:', error);
                }
            });
        }
    </script> *@
}





    @* <input type="radio" id="star5" name="rating" value="5" data-rate="5" />
    <label id="star5" for="star5" title="5 stars" data-rate="5"></label>
    <input type="radio" id="star4" name="rating" value="4" data-rate="4" />
    <label id="star4" for="star4" title="4 stars" data-rate="4">&#9733;</label>
    <input type="radio" id="star3" name="rating" value="3" data-rate="3" />
    <label id="star3" for="star3" title="3 stars" data-rate="3">&#9733;</label>
    <input type="radio" id="star2" name="rating" value="2" data-rate="2" />
    <label id="star2" for="star2" title="2 stars" data-rate="2">&#9733;</label>
    <input type="radio" id="star1" name="rating" value="1" data-rate="1" />
    <label id="star1" for="star1" title="1 star" data-rate="1">&#9733;</label> *@
